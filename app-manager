#!/bin/bash

# Author: Dillrex
# Contributers: QuadSam
# Version: 1

# Global Variables
VERSION=1
BACKUP_FILE="$(dirname "$(realpath "$0")")/app-manager-backup.txt"

# Functions

show_help() {
    echo "Available commands:"
    echo "  ./app-manager gui               Launch GUI-based interactive mode"
    echo "  ./app-manager install <file>    Install a .deb package (e.g., ./package.deb)"
    echo "  ./app-manager uninstall <app>   Uninstall an app by name"
    echo "  ./app-manager update-all        Update all installed apps (APT, Snap, Flatpak)"
    echo "  ./app-manager backup            Backup installed apps"
    echo "  ./app-manager restore           Restore apps from backup"
    echo "  ./app-manager help              Show this help message"
    echo "  ./app-manager version           Show the current version of the script"
}

interactive_mode() {
    while true; do
        action=$(zenity --list \
            --title="App Manager" \
            --text="Select an action:" \
            --column="Action" --column="Description" \
            "Install App" "Install an app by selecting a file" \
            "List Apps" "View and search installed applications" \
            "Uninstall App" "Search and uninstall an app" \
            "Update App" "Search and update a specific app" \
            "Update All Apps" "Update all installed applications" \
            "Check for Updates" "Check for and install the latest version of App Manager" \
            "Backup Apps" "Create a backup of your installed apps" \
            "Restore Apps" "Restore apps from the backup file" \
            --width=800 --height=600)

        if [ -z "$action" ]; then
            zenity --info --text="Exiting GUI mode." --title="App Manager"
            break
        fi

        case "$action" in
            "Install App") install_from_gui ;;
            "List Apps") list_installed_apps | zenity --text-info --title="Installed Apps" ;;
            "Uninstall App") uninstall_from_gui ;;
            "Update App") update_from_gui ;;
            "Update All Apps") update_all_from_gui ;;
            "Check for Updates") check_for_updates ;;
            "Backup Apps") backup_apps_gui ;;
            "Restore Apps") restore_apps_gui ;;
            *) zenity --error --text="Invalid option." --title="App Manager" ;;
        esac
    done
}

install_app() {
    local file=$1
    if [[ "$file" == *.deb ]]; then
        echo "Installing $file..."
        if sudo dpkg -i "$file" && sudo apt-get install -f -y; then
            echo "Successfully installed $file."
        else
            echo "Failed to install $file. Check for errors."
        fi
    else
        echo "Unsupported file type. Please select a valid .deb file."
    fi
}

install_from_gui() {
    local file=$(zenity --file-selection --title="Select a file to install" \
        --file-filter="DEB packages (*.deb) | *.deb" \
        --file-filter="All files (*.*) | *.*")

    if [ -z "$file" ]; then
        zenity --info --text="No file selected. Returning to the main menu." --title="App Manager"
        return
    fi

    install_app "$file"
}

list_installed_apps() {
    dpkg-query -f '${binary:Package}\n' -W | grep -vE "linux|^lib|^firmware|^systemd|^dpkg|^apt|^bash|^glibc|^python" | sort
}

uninstall_app() {
    local app=$1
    if [ -z "$app" ]; then
        echo "No app specified for uninstallation."
        return 1
    fi

    echo "Uninstalling $app..."
    sudo apt-get remove --purge -y "$app" && sudo apt-get autoremove -y
}

uninstall_from_gui() {
    local selected_app=$(search_and_select_app)
    if [ -z "$selected_app" ]; then
        return
    fi

    if zenity --question --text="Are you sure you want to uninstall $selected_app?" --title="App Manager"; then
        uninstall_app "$selected_app"
        if [ $? -eq 0 ]; then
            zenity --info --text="$selected_app has been successfully uninstalled." --title="App Manager"
        else
            zenity --error --text="Error uninstalling $selected_app." --title="App Manager"
        fi
    fi
}

backup_apps() {
    dpkg --get-selections > "$BACKUP_FILE"
    echo "Backup saved to $BACKUP_FILE"
}

backup_apps_gui() {
    backup_apps
    zenity --info --text="Backup saved to $BACKUP_FILE" --title="App Manager"
}

restore_apps() {
    if [ ! -f "$BACKUP_FILE" ]; then
        echo "No backup file found at $BACKUP_FILE"
        return 1
    fi

    sudo dpkg --set-selections < "$BACKUP_FILE"
    sudo apt-get dselect-upgrade -y
    echo "Restore completed from $BACKUP_FILE"
}

restore_apps_gui() {
    restore_apps
    zenity --info --text="Restore completed from $BACKUP_FILE" --title="App Manager"
}

update_all_apps() {
    echo "Updating all applications..."
    sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get dist-upgrade -y
    echo "All updates completed successfully."
}

update_all_from_gui() {
    zenity --info --text="Updating all installed applications, including Snap and Flatpak packages (if available)..." --title="App Manager"
    update_all_apps
}

check_for_updates() {
    # Placeholder for update-check logic
    echo "Check for updates logic goes here"
}

# Main logic
if [ "$#" -eq 0 ]; then
    show_help
elif [ "$1" == "gui" ]; then
    interactive_mode
elif [ "$1" == "install" ]; then
    install_app "$2"
elif [ "$1" == "uninstall" ]; then
    uninstall_app "$2"
elif [ "$1" == "update-all" ]; then
    update_all_apps
elif [ "$1" == "backup" ]; then
    backup_apps
elif [ "$1" == "restore" ]; then
    restore_apps
elif [ "$1" == "help" ]; then
    show_help
elif [ "$1" == "version" ]; then
    echo "App Manager Version: $VERSION"
else
    echo "Invalid command. Use './app-manager help' for a list of available commands."
fi
